Function Get-UnityesrsParam {

  <#
      .SYNOPSIS
      Information about the EMC Remote Support (ESRS) configuration<br/> <br/> Unity Remote Support is enabled with the EMC&#8217;s leading remote support platform: EMC Secure Remote Support (ESRS). ESRS is a remote monitoring and support feature that provides authorized personnel with EMC remote access capabilities to storage systems via a secure and encrypted tunnel. The secure tunnel that ESRS establishes between the storage system and systems on the EMC network can be used to transfer files out to the storage system or back to EMC.<br/> <br/> ESRS provides the following features in providing an end-to-end remote support solution:<br/> <br/> <ul> <li>Automation - IP based connection enables fast remote diagnosis and repair of potential problems before an impact to business operations is noticed.</li> <li>Authentication - Advanced security features such as AES 256-bit encryption and RSA digital certificates ensure data privacy.</li> <li>Authorization - Customizable policies that you control include the ability to allow or deny remote support sessions.</li> <li>Audit - Detailed audit capabilities enable compliance with regulatory and internal business requirements.</li> </ul> <br/> ESRS offers two remote support solutions:<br/> <ul> <li>Integrated solution, which uses ESRS Virtual Edition (ESRS V3) technology integrated into the storage system to connect with EMC</li> <li>Centralized solution, which uses the ESRS Virtual Edition (ESRS V3) to connect with EMC</li> </ul> <br/> Setting up Remote Support requires: <br/> <ul> <li>An installed EMC Support license</li> <li>Valid support credentials</li> <li>A configured DNS server</li> </ul> <br/> For information about ESRS components and setup, go to the support website.<br/> Note that all proxy configuration for integrated support is now available from the supportProxy object. These properties proxyIsEnabled,proxyStatus,proxyAddress,proxyIsHTTP,proxyUserName are deprecated and will be removed in a future release. <br/> <br/> <b>Examples</b> <br/> <br/> <html> <head> <style> div.examplebox { background-color: #eff5fa; width: 600px; padding: 5px; border: 2px solid black; } </style> </head> <body> <br/> <b>Series operations need to perform to enable Integrated Remote Support</b><br/> <br/> Step 1: Accept EULA. The EULA must be accepted before any other configurations. <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/modify <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;isEsrsVeEulaAccepted&quot; : &quot;true&quot;<br/> }<br/> </p> </div> <br/> <br/> Step 2: Update contact infomation in systemInformation object. EMC will use this information to contact end user when errors detected. <div class="examplebox"> <p> POST /api/instances/systemInformation/0/action/modify <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;contactFirstName&quot; : &quot;Jill&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;contactLastName&quot; : &quot;Valentine&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;contactCompany&quot; : &quot;Umbrella Corporation&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;contactEmail&quot; : &quot;jill.valentine@umbrella.com&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;contactPhone&quot; : &quot;111-111-1111&quot;<br/> }<br/> </p> </div> <br/> <br/> Step 3: Set proxy server if the user wants to configure Integrated Remote Support with a proxy server. This step can be skipped if user doesn't want to use proxy server. <div class="examplebox"> <p> POST /api/instances/supportProxy/0/action/modify <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;isEnabled&quot; : &quot;true&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;address&quot; : &quot;10.105.221.123:1080&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;protocol&quot; : &quot;1&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;username&quot; : &quot;darthv&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;password&quot; : &quot;password&quot;<br/> }<br/> </p> </div> <br/> <br/> Step 4: Validate Network connectivity between Integrated Remote Support client and EMC servers. <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/checkNetwork <br/> { <br/> }<br/> </p> </div> <br/> <br/> Following steps are try to get the available sites for the current system, select the correct one and set it into Integrated Remote Support client.<br/> Step 5: Request for an access code. This access code will be used later to get the available sites. <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/requestAccessCode <br/> { <br/> }<br/> </p> </div> <br/> <br/> Step 6: Get the available sites with the access code. <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/getAvailableSites <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;accessCode&quot; : &quot;243857&quot;<br/> }<br/> </p> </div> <br/> <br/> Step 7: Set siteId. Select the correct site id from the returned sites in previous request. <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/modify <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;siteId&quot; : &quot;324546&quot;<br/> }<br/> </p> </div> <br/> <br/> Now, Integration Remote Support is enabled. <br/> <br/> <b>Disabling Integrated Remote Support</b><br/> <br/> If a proxy server or Policy Manager are enabled, they will automatically be disabled.<br/> <br/> <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/modify <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;enabled&quot; : &quot;false&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;false&quot;<br/> }<br/> </p> </div> <br/> <br/> <b>Checking the Integrated Remote Support status</b><br/> <br/> <div class="examplebox"> <p> GET /api/types/esrsParam/instances?fields=enabled,isCentralized <br/> <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;content&quot;:<br/> &nbsp;&nbsp;&nbsp;&nbsp;{<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;false&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;status&quot; : 2<br/> &nbsp;&nbsp;&nbsp;&nbsp;}<br/> <br/> </p> </div> <br/> <br/> <b>Checking the Integrated Remote Support configuration</b><br/> <br/> <div class="examplebox"> <p> GET /api/types/esrsParam/instances?fields=enabled,isCentralized,status, statusDescription::@enum(status)<br/> <br/> Sample response:<br/> <br/> &quot;content&quot;:<br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;enabled&quot; : &quot;true&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;false&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;status&quot; : &quot;2&quot;<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;statusDescription&quot; : &quot;connected&quot;<br/> }<br/> <br/> The statusDescription attribute is a calculated attribute that translates the normalized status value into a user friendly string.<br/> </p> </div> <br/> <br/> <b>Enabling Centralized Remote Support</b><br/> <br/> <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/modify <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;enabled&quot; : &quot;true&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;true&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;esrsVeAddress&quot; : &quot;10.105.221.123&quot;<br/> }<br/> </p> </div> <br/> <br/> <b>Modifying the Centralized Remote Support appliance</b><br/> <br> This example disconnects the storage system from the current ESRS VE appliance and reconnects it to a new one.<br/> <br/> <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/modify <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;enabled&quot; : &quot;true&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;true&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;esrsVeAddress&quot; : &quot;myveserver.acme.com:2135&quot;<br/> }<br/> </p> </div> <br/> <br/> <b>Disabling Centralized Remote Support</b><br/> <br/> <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/modify <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;enabled&quot; : &quot;false&quot;<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;true&quot;,<br/> }<br/> </p> </div> </body> </html> <br/> <br/> * <br/> <br/> <b>Switching between Integrated and Centralized Remote Support</b><br/> <br/> This example assumes that Integrated Remote Support is enabled. It will be disabled before the Centralized Remote Support is enabled.<br/> <br/> <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/modify <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;enabled&quot; : &quot;true&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;true&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;esrsVeAddress&quot; : &quot;10.105.221.123&quot;<br/> }<br/> </p> </div>  
      .DESCRIPTION
      Information about the EMC Remote Support (ESRS) configuration<br/> <br/> Unity Remote Support is enabled with the EMC&#8217;s leading remote support platform: EMC Secure Remote Support (ESRS). ESRS is a remote monitoring and support feature that provides authorized personnel with EMC remote access capabilities to storage systems via a secure and encrypted tunnel. The secure tunnel that ESRS establishes between the storage system and systems on the EMC network can be used to transfer files out to the storage system or back to EMC.<br/> <br/> ESRS provides the following features in providing an end-to-end remote support solution:<br/> <br/> <ul> <li>Automation - IP based connection enables fast remote diagnosis and repair of potential problems before an impact to business operations is noticed.</li> <li>Authentication - Advanced security features such as AES 256-bit encryption and RSA digital certificates ensure data privacy.</li> <li>Authorization - Customizable policies that you control include the ability to allow or deny remote support sessions.</li> <li>Audit - Detailed audit capabilities enable compliance with regulatory and internal business requirements.</li> </ul> <br/> ESRS offers two remote support solutions:<br/> <ul> <li>Integrated solution, which uses ESRS Virtual Edition (ESRS V3) technology integrated into the storage system to connect with EMC</li> <li>Centralized solution, which uses the ESRS Virtual Edition (ESRS V3) to connect with EMC</li> </ul> <br/> Setting up Remote Support requires: <br/> <ul> <li>An installed EMC Support license</li> <li>Valid support credentials</li> <li>A configured DNS server</li> </ul> <br/> For information about ESRS components and setup, go to the support website.<br/> Note that all proxy configuration for integrated support is now available from the supportProxy object. These properties proxyIsEnabled,proxyStatus,proxyAddress,proxyIsHTTP,proxyUserName are deprecated and will be removed in a future release. <br/> <br/> <b>Examples</b> <br/> <br/> <html> <head> <style> div.examplebox { background-color: #eff5fa; width: 600px; padding: 5px; border: 2px solid black; } </style> </head> <body> <br/> <b>Series operations need to perform to enable Integrated Remote Support</b><br/> <br/> Step 1: Accept EULA. The EULA must be accepted before any other configurations. <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/modify <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;isEsrsVeEulaAccepted&quot; : &quot;true&quot;<br/> }<br/> </p> </div> <br/> <br/> Step 2: Update contact infomation in systemInformation object. EMC will use this information to contact end user when errors detected. <div class="examplebox"> <p> POST /api/instances/systemInformation/0/action/modify <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;contactFirstName&quot; : &quot;Jill&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;contactLastName&quot; : &quot;Valentine&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;contactCompany&quot; : &quot;Umbrella Corporation&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;contactEmail&quot; : &quot;jill.valentine@umbrella.com&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;contactPhone&quot; : &quot;111-111-1111&quot;<br/> }<br/> </p> </div> <br/> <br/> Step 3: Set proxy server if the user wants to configure Integrated Remote Support with a proxy server. This step can be skipped if user doesn't want to use proxy server. <div class="examplebox"> <p> POST /api/instances/supportProxy/0/action/modify <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;isEnabled&quot; : &quot;true&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;address&quot; : &quot;10.105.221.123:1080&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;protocol&quot; : &quot;1&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;username&quot; : &quot;darthv&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;password&quot; : &quot;password&quot;<br/> }<br/> </p> </div> <br/> <br/> Step 4: Validate Network connectivity between Integrated Remote Support client and EMC servers. <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/checkNetwork <br/> { <br/> }<br/> </p> </div> <br/> <br/> Following steps are try to get the available sites for the current system, select the correct one and set it into Integrated Remote Support client.<br/> Step 5: Request for an access code. This access code will be used later to get the available sites. <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/requestAccessCode <br/> { <br/> }<br/> </p> </div> <br/> <br/> Step 6: Get the available sites with the access code. <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/getAvailableSites <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;accessCode&quot; : &quot;243857&quot;<br/> }<br/> </p> </div> <br/> <br/> Step 7: Set siteId. Select the correct site id from the returned sites in previous request. <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/modify <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;siteId&quot; : &quot;324546&quot;<br/> }<br/> </p> </div> <br/> <br/> Now, Integration Remote Support is enabled. <br/> <br/> <b>Disabling Integrated Remote Support</b><br/> <br/> If a proxy server or Policy Manager are enabled, they will automatically be disabled.<br/> <br/> <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/modify <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;enabled&quot; : &quot;false&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;false&quot;<br/> }<br/> </p> </div> <br/> <br/> <b>Checking the Integrated Remote Support status</b><br/> <br/> <div class="examplebox"> <p> GET /api/types/esrsParam/instances?fields=enabled,isCentralized <br/> <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;content&quot;:<br/> &nbsp;&nbsp;&nbsp;&nbsp;{<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;false&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;status&quot; : 2<br/> &nbsp;&nbsp;&nbsp;&nbsp;}<br/> <br/> </p> </div> <br/> <br/> <b>Checking the Integrated Remote Support configuration</b><br/> <br/> <div class="examplebox"> <p> GET /api/types/esrsParam/instances?fields=enabled,isCentralized,status, statusDescription::@enum(status)<br/> <br/> Sample response:<br/> <br/> &quot;content&quot;:<br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;enabled&quot; : &quot;true&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;false&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;status&quot; : &quot;2&quot;<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;statusDescription&quot; : &quot;connected&quot;<br/> }<br/> <br/> The statusDescription attribute is a calculated attribute that translates the normalized status value into a user friendly string.<br/> </p> </div> <br/> <br/> <b>Enabling Centralized Remote Support</b><br/> <br/> <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/modify <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;enabled&quot; : &quot;true&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;true&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;esrsVeAddress&quot; : &quot;10.105.221.123&quot;<br/> }<br/> </p> </div> <br/> <br/> <b>Modifying the Centralized Remote Support appliance</b><br/> <br> This example disconnects the storage system from the current ESRS VE appliance and reconnects it to a new one.<br/> <br/> <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/modify <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;enabled&quot; : &quot;true&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;true&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;esrsVeAddress&quot; : &quot;myveserver.acme.com:2135&quot;<br/> }<br/> </p> </div> <br/> <br/> <b>Disabling Centralized Remote Support</b><br/> <br/> <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/modify <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;enabled&quot; : &quot;false&quot;<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;true&quot;,<br/> }<br/> </p> </div> </body> </html> <br/> <br/> * <br/> <br/> <b>Switching between Integrated and Centralized Remote Support</b><br/> <br/> This example assumes that Integrated Remote Support is enabled. It will be disabled before the Centralized Remote Support is enabled.<br/> <br/> <div class="examplebox"> <p> POST /api/instances/esrsParam/0/action/modify <br/> { <br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;enabled&quot; : &quot;true&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;true&quot;,<br/> &nbsp;&nbsp;&nbsp;&nbsp;&quot;esrsVeAddress&quot; : &quot;10.105.221.123&quot;<br/> }<br/> </p> </div>  
      You need to have an active session with the array.
      .NOTES
      Written by Erwan Quelin under MIT licence - https://github.com/equelin/Unity-Powershell/blob/master/LICENSE
      .LINK
      https://github.com/equelin/Unity-Powershell
      .PARAMETER Session
      Specifies an UnitySession Object.
      .PARAMETER Name
      Specifies the object name.
      .PARAMETER ID
      Specifies the object ID.
      .EXAMPLE
      Get-UnityesrsParam

      Retrieve information about all UnityesrsParam
      .EXAMPLE
      Get-UnityesrsParam -ID 'id01'

      Retrieves information about a specific UnityesrsParam
  #>

  [CmdletBinding(DefaultParameterSetName='Name')]
  Param (
    [Parameter(Mandatory = $false,HelpMessage = 'EMC Unity Session')]
    $session = ($global:DefaultUnitySession | where-object {$_.IsConnected -eq $true}),
    [Parameter(Mandatory = $false,ParameterSetName='Name',ValueFromPipeline=$True,ValueFromPipelinebyPropertyName=$True,HelpMessage = 'UnityesrsParam Name')]
    [String[]]$Name,
    [Parameter(Mandatory = $false,ParameterSetName='ID',ValueFromPipeline=$True,ValueFromPipelinebyPropertyName=$True,HelpMessage = 'UnityesrsParam ID')]
    [String[]]$ID
  )

  Begin {
    Write-Debug -Message "[$($MyInvocation.MyCommand)] Executing function"

    #Initialazing variables
    $URI = '/api/types/esrsParam/instances' #URI
    $TypeName = 'UnityesrsParam'
  }

  Process {
    Foreach ($sess in $session) {

      Write-Debug -Message "[$($MyInvocation.MyCommand)] Processing Session: $($Session.Server) with SessionId: $($Session.SessionId)"

      Get-UnityItemByKey -Session $Sess -URI $URI -Typename $Typename -Key $PsCmdlet.ParameterSetName -Value $PSBoundParameters[$PsCmdlet.ParameterSetName]

    } # End Foreach ($sess in $session)
  } # End Process
} # End Function

